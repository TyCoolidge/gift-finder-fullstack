{"ast":null,"code":"var _jsxFileName = \"/Users/tycool/coding-projects/gift-finder-fullstack/client/src/components/ui/LogIn.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport hash from \"object-hash\";\nimport { v4 as getUuid } from \"uuid\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport actions from \"../../store/actions\";\nimport { connect } from \"react-redux\";\n\nclass LogIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logInEmailError: \"\",\n      hasLogInEmailError: false,\n      hasLogInEmailSuccess: false,\n      //\n      logInPasswordError: \"\",\n      hasPasswordError: false,\n      hasPasswordSuccess: false\n    };\n  }\n\n  componentDidMount() {}\n\n  async setLogInEmailState(logInEmailInput) {\n    // eslint-disable-next-line\n    const logInEmailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const lowerCaseLogInEmailInput = logInEmailInput.toLowerCase();\n    if (logInEmailInput === \"\") this.setState({\n      logInEmailError: \"Please enter your address or username\",\n      hasLogInEmailError: true\n    });else if (!logInEmailRegex.test(lowerCaseLogInEmailInput)) {\n      this.setState({\n        logInEmailError: \"Please enter a valid email\",\n        hasLogInEmailError: true\n      });\n    } else {\n      this.setState({\n        logInEmailError: \"\",\n        hasLogInEmailError: false,\n        hasLogInEmailSuccess: true\n      });\n    }\n  }\n\n  async setLogInPasswordState(logInPasswordInput) {\n    if (logInPasswordInput === \"\") {\n      this.setState({\n        logInPasswordError: \"Please enter your password\",\n        hasPasswordError: true\n      });\n    } // TODO: if password does not match database \"password entered may be incorrect\"\n    else {\n        this.setState({\n          logInPasswordError: \"\",\n          hasPasswordError: false,\n          hasPasswordSuccess: true\n        });\n      }\n  }\n\n  async validateLoginInputs() {\n    const logInEmailInput = document.getElementById(\"login-email-input\").value;\n    const logInPasswordInput = document.getElementById(\"login-password-input\").value;\n    await this.setLogInEmailState(logInEmailInput);\n    await this.setLogInPasswordState(logInPasswordInput);\n\n    if (this.state.hasLogInEmailError === false && this.state.hasPasswordError === false) {\n      const logUser = {\n        id: getUuid(),\n        email: logInEmailInput,\n        password: hash(logInPasswordInput),\n        createdAt: Date.now()\n      };\n      console.log(\"created user object\", logUser);\n      axios.get(\"https://run.mocky.io/v3/624bafeb-1593-4c68-9f9b-5952d2111755\").then(res => {\n        const currentUser = res.data[0];\n        console.log(currentUser);\n        this.props.dispatch({\n          type: actions.UPDATE_CURRENT_USER,\n          payload: currentUser\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n\n      if (this.props.redirectToAccountPage === \"back to account\") {\n        this.props.dispatch({\n          type: actions.REDIRECT_TO_ACCOUNT_PAGE,\n          payload: {}\n        });\n        this.props.history.push(\"/account-page\");\n      } else {\n        // make it where clicking on myAccout makes empty state for currentUser, if has that empty state then redirect\n        this.props.history.push(\"/add-gift-page\");\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-4 col-lg-4 mx-4 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        color: \"\"\n      },\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, \"Log In\"), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"form-text text-muted mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, \"Are you a returning user?\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"log-in-email-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, \"Email or User Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      className: classnames({\n        \"form-control\": true,\n        \"is-invalid\": this.state.hasLogInEmailError,\n        \"is-valid\": this.state.hasLogInEmailSuccess\n      }),\n      \"aria-describedby\": \"emailHelp\",\n      placeholder: \"Enter email or username\",\n      id: \"login-email-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }), this.state.hasLogInEmailError !== \"\" && /*#__PURE__*/React.createElement(\"small\", {\n      className: \"form-text text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, this.state.logInEmailError), this.state.logInEmailError === \"\" && /*#__PURE__*/React.createElement(\"small\", {\n      className: \"form-text text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, \"We'll never share your email with anyone else.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleInputPassword1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: classnames({\n        \"form-control\": true,\n        \"is-invalid\": this.state.hasPasswordError,\n        \"is-valid\": this.state.hasPasswordSuccess\n      }),\n      placeholder: \"Password\",\n      id: \"login-password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }), this.state.hasPasswordError && /*#__PURE__*/React.createElement(\"small\", {\n      className: \"form-text text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }, this.state.logInPasswordError)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-3 float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"#\",\n      className: \"btn btn-primary\",\n      onClick: () => {\n        this.validateLoginInputs();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, \"Log in\"))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    editableGift: state.editableGift,\n    redirectToAccountPage: state.redirectToAccountPage\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(LogIn));","map":{"version":3,"sources":["/Users/tycool/coding-projects/gift-finder-fullstack/client/src/components/ui/LogIn.js"],"names":["React","Link","classnames","hash","v4","getUuid","withRouter","axios","actions","connect","LogIn","Component","constructor","props","state","logInEmailError","hasLogInEmailError","hasLogInEmailSuccess","logInPasswordError","hasPasswordError","hasPasswordSuccess","componentDidMount","setLogInEmailState","logInEmailInput","logInEmailRegex","lowerCaseLogInEmailInput","toLowerCase","setState","test","setLogInPasswordState","logInPasswordInput","validateLoginInputs","document","getElementById","value","logUser","id","email","password","createdAt","Date","now","console","log","get","then","res","currentUser","data","dispatch","type","UPDATE_CURRENT_USER","payload","catch","error","redirectToAccountPage","REDIRECT_TO_ACCOUNT_PAGE","history","push","render","color","mapStateToProps","editableGift"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport hash from \"object-hash\";\nimport { v4 as getUuid } from \"uuid\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport actions from \"../../store/actions\";\nimport { connect } from \"react-redux\";\n\nclass LogIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logInEmailError: \"\",\n      hasLogInEmailError: false,\n      hasLogInEmailSuccess: false,\n      //\n      logInPasswordError: \"\",\n      hasPasswordError: false,\n      hasPasswordSuccess: false,\n    };\n  }\n  componentDidMount() {}\n\n  async setLogInEmailState(logInEmailInput) {\n    // eslint-disable-next-line\n    const logInEmailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const lowerCaseLogInEmailInput = logInEmailInput.toLowerCase();\n    if (logInEmailInput === \"\")\n      this.setState({\n        logInEmailError: \"Please enter your address or username\",\n        hasLogInEmailError: true,\n      });\n    else if (!logInEmailRegex.test(lowerCaseLogInEmailInput)) {\n      this.setState({\n        logInEmailError: \"Please enter a valid email\",\n        hasLogInEmailError: true,\n      });\n    } else {\n      this.setState({\n        logInEmailError: \"\",\n        hasLogInEmailError: false,\n        hasLogInEmailSuccess: true,\n      });\n    }\n  }\n\n  async setLogInPasswordState(logInPasswordInput) {\n    if (logInPasswordInput === \"\") {\n      this.setState({\n        logInPasswordError: \"Please enter your password\",\n        hasPasswordError: true,\n      });\n    }\n    // TODO: if password does not match database \"password entered may be incorrect\"\n    else {\n      this.setState({\n        logInPasswordError: \"\",\n        hasPasswordError: false,\n        hasPasswordSuccess: true,\n      });\n    }\n  }\n\n  async validateLoginInputs() {\n    const logInEmailInput = document.getElementById(\"login-email-input\").value;\n    const logInPasswordInput = document.getElementById(\"login-password-input\")\n      .value;\n    await this.setLogInEmailState(logInEmailInput);\n    await this.setLogInPasswordState(logInPasswordInput);\n    if (\n      this.state.hasLogInEmailError === false &&\n      this.state.hasPasswordError === false\n    ) {\n      const logUser = {\n        id: getUuid(),\n        email: logInEmailInput,\n        password: hash(logInPasswordInput),\n        createdAt: Date.now(),\n      };\n      console.log(\"created user object\", logUser);\n      axios\n        .get(\"https://run.mocky.io/v3/624bafeb-1593-4c68-9f9b-5952d2111755\")\n        .then((res) => {\n          const currentUser = res.data[0];\n          console.log(currentUser);\n          this.props.dispatch({\n            type: actions.UPDATE_CURRENT_USER,\n            payload: currentUser,\n          });\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      if (this.props.redirectToAccountPage === \"back to account\") {\n        this.props.dispatch({\n          type: actions.REDIRECT_TO_ACCOUNT_PAGE,\n          payload: {},\n        });\n        this.props.history.push(\"/account-page\");\n      } else {\n        // make it where clicking on myAccout makes empty state for currentUser, if has that empty state then redirect\n        this.props.history.push(\"/add-gift-page\");\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-xl-4 col-lg-4 mx-4 col-md-12\">\n        {/* change header blue */}\n        <h2 style={{ color: \"\" }} className=\"card-title\">\n          Log In\n        </h2>\n        <small className=\"form-text text-muted mb-3\">\n          Are you a returning user?\n        </small>\n        <form>\n          <div className=\"form-group\">\n            <label htmlFor=\"log-in-email-input\">Email or User Name</label>\n            {/* might not have username for MVP */}\n            <input\n              type=\"email\"\n              className={classnames({\n                \"form-control\": true,\n                \"is-invalid\": this.state.hasLogInEmailError,\n                \"is-valid\": this.state.hasLogInEmailSuccess,\n              })}\n              aria-describedby=\"emailHelp\"\n              placeholder=\"Enter email or username\"\n              id=\"login-email-input\"\n            />\n            {this.state.hasLogInEmailError !== \"\" && (\n              <small className=\"form-text text-danger\">\n                {this.state.logInEmailError}\n              </small>\n            )}\n            {this.state.logInEmailError === \"\" && (\n              <small className=\"form-text text-muted\">\n                We'll never share your email with anyone else.\n              </small>\n            )}\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputPassword1\">Password</label>\n            <input\n              type=\"password\"\n              className={classnames({\n                \"form-control\": true,\n                \"is-invalid\": this.state.hasPasswordError,\n                \"is-valid\": this.state.hasPasswordSuccess,\n              })}\n              placeholder=\"Password\"\n              id=\"login-password-input\"\n            />\n            {this.state.hasPasswordError && (\n              <small className=\"form-text text-danger\">\n                {this.state.logInPasswordError}\n              </small>\n            )}\n          </div>\n          {/* disabled button that appears right away, will go away if email parameters are good */}\n\n          <div className=\"mt-3 float-right\">\n            <Link\n              to=\"#\"\n              className=\"btn btn-primary\"\n              onClick={() => {\n                this.validateLoginInputs();\n              }}\n            >\n              Log in\n            </Link>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    editableGift: state.editableGift,\n    redirectToAccountPage: state.redirectToAccountPage,\n  };\n}\nexport default withRouter(connect(mapStateToProps)(LogIn));\n"]},"metadata":{},"sourceType":"module"}